-- Группы по каждому предмету с указанием преподавателя
SELECT 
    s.subject_name AS subject,
    t.last_name + ' ' + t.first_name AS teacher,
    g.group_name
FROM 
    subjects s
JOIN 
    teachers t ON s.teacher_id = t.id
JOIN 
    groups g ON s.direction_id = g.direction_id
ORDER BY 
    s.subject_name, g.group_name;

----------------------------------------------------------
-- Дисциплина с максимальным количеством студентов
SELECT TOP 1
    s.subject_name AS subject,
    COUNT(DISTINCT st.id) AS student_count
FROM 
    grades g
JOIN 
    students st ON g.student_id = st.id
JOIN 
    subjects s ON g.subject_id = s.id
GROUP BY 
    s.id, s.subject_name
ORDER BY 
    student_count DESC;

----------------------------------------------------------
-- Количество студентов у каждого преподавателя
SELECT 
    t.last_name + ' ' + t.first_name AS teacher,
    COUNT(DISTINCT st.id) AS student_count
FROM 
    teachers t
JOIN 
    subjects s ON t.id = s.teacher_id
JOIN 
    grades g ON s.id = g.subject_id
JOIN 
    students st ON g.student_id = st.id
GROUP BY 
    t.id, t.last_name, t.first_name
ORDER BY 
    student_count DESC;

----------------------------------------------------------
-- Доля сдавших студентов по каждой дисциплине
SELECT 
    s.subject_name AS subject,
    ROUND(
        (CAST(SUM(CASE WHEN g.grade > 2 THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*)) * 100, 
        2
    ) AS pass_rate_percentage
FROM 
    grades g
JOIN 
    subjects s ON g.subject_id = s.id
GROUP BY 
    s.id, s.subject_name;

----------------------------------------------------------
-- Средняя оценка по предметам (только для сдавших)
SELECT 
    s.subject_name AS subject,
    ROUND(AVG(CASE WHEN g.grade > 2 THEN CAST(g.grade AS FLOAT) ELSE NULL END), 2) AS average_grade
FROM 
    grades g
JOIN 
    subjects s ON g.subject_id = s.id
GROUP BY 
    s.id, s.subject_name;

----------------------------------------------------------
-- Группа с максимальной средней оценкой (включая несдавших)
SELECT TOP 1
    g.group_name AS group_name,
    ROUND(AVG(COALESCE(CAST(gr.grade AS FLOAT), 0)), 2) AS average_grade
FROM 
    grades gr
JOIN 
    students st ON gr.student_id = st.id
JOIN 
    groups g ON st.group_id = g.id
GROUP BY 
    g.id, g.group_name
ORDER BY 
    average_grade DESC;

----------------------------------------------------------
-- Студенты со всеми отличными оценками и без несданных экзаменов
SELECT 
    st.last_name,
    st.first_name,
    st.middle_name,
    g.group_name
FROM 
    students st
JOIN 
    groups g ON st.group_id = g.id
WHERE 
    NOT EXISTS (
        SELECT 1 
        FROM grades gr
        WHERE gr.student_id = st.id 
          AND (gr.grade < 5 OR gr.grade IS NULL)
    );

----------------------------------------------------------
-- Кандидаты на отчисление (несдано не менее двух предметов)
SELECT 
    st.last_name, st.first_name, st.middle_name, g.group_name,
    COUNT(CASE WHEN gr.grade = 2 OR gr.grade IS NULL THEN 1 ELSE NULL END) AS failed_subjects
FROM 
    students st
JOIN 
    grades gr ON st.id = gr.student_id
JOIN 
    groups g ON st.group_id = g.id
GROUP BY 
    st.id, st.last_name, st.first_name, st.middle_name, g.group_name
HAVING COUNT(CASE WHEN gr.grade = 2 OR gr.grade IS NULL THEN 1 ELSE NULL END) >= 2;
